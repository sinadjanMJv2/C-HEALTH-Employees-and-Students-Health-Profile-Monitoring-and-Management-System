<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Login & Registration Form</title>
  <!---Custom CSS File--->
  <link rel="stylesheet" href="~/css/login.css">
  <link rel="stylesheet" href="~/css/calendar.css">
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200">


</head>

<body class="body"
  style=" background: linear-gradient(rgba(0 0 0 / 0.8), rgba(0 0 0 / 0)), url('../../image/frvtatak.jpg'); background-size: cover; background-position: center; background-repeat: no-repeat;">

  <div class="wrapper-calendar">
    <header>
      <p class="current-date"></p>
      <div class="icons">
        <span id="prev" class="material-symbols-rounded">chevron_left</span>
        <span id="next" class="material-symbols-rounded">chevron_right</span>
      </div>
    </header>
    <div class="calendar">
      <ul class="weeks">
        <li>Sun</li>
        <li>Mon</li>
        <li>Tue</li>
        <li>Wed</li>
        <li>Thu</li>
        <li>Fri</li>
        <li>Sat</li>
      </ul>
      <ul class="days"></ul>
    </div>
  </div>

  @* kani siya mao ni sa background log in form *@
  <div class="container">

    <img src="~/image/logo.png" alt="" class="image">


    <input type="checkbox" id="check">





    <div class="login form">
      <header>Login</header>
      <form action="#" id="signinForm">
        <input class="gmail" type="text" placeholder="Enter your email" required>
        <input class="password" type="password" placeholder="Enter your password" required>


        <input type="submit" name="signin" id="signin" class="button" value="Log in" />

      </form>



      <div class="signup">
        <span class="signup">Forgot your password?
          <label for="check">Click Here !!!</label>
        </span>
      </div>
    </div>
    <div class="registration form">
      <header style="font-size: 20px; margin-right: 50px;">Recover Password</header>
      <form action="#" id="signupForm">
        <input type="text" class="inputrecover" placeholder="Enter your email">

        <input type="button" id="buttonRecover" class="button" value="Recover">
      </form>
      <div class="signup">
        <span class="signup">Have a password already!!
          <label for="check">Back</label>
        </span>
      </div>
    </div>
  </div>



</body>

</html>


<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script src="~/lib/jquery/dist/jquery.js"></script>

<script src="~/lib/emailjs/dist/email.min.js"></script>



<script>
  var AdminList = {};
  var PhyList = {};
  var gmailAddPhy = {};
  var DateList = [];
  var gmailAdd = {};
  var listDate = [];

  $(() => {

    var userType = sessionStorage.getItem('userType');

    if (userType !== null) {
      if (userType === "patient") {
        window.location.href = "/User/StudentHealthProfile";
      }
      else if (userType === "admin") {
        window.location.href = "/Admin/AdminCategory";
      }
    }

    margin();
    getAdminAndPhysicianAcc();
    getDate();

    function margin() {

      $(".page-content").removeClass();
      $(".container-fluid").removeClass();
    }

    function getAdminAndPhysicianAcc() {
      $.ajax("../api/adminapi/getAdminAccount")
        .done(function (result) {

          AdminList = result;

          var gmailaddress = [];
          result.forEach(item => {
            gmailaddress.push(item.gmail);
            // console.log(gmailaddress)
          });

          gmailAdd = [... new Set(gmailaddress)];

          console.log("gmailaddress", gmailAdd)
        });


      $.ajax("../api/adminapi/getPhysician")
        .done(function (result) {

          PhyList = result;

          var gmailaddressPhy = [];
          result.forEach(item => {
            gmailaddressPhy.push(item.gmail);

          });

          gmailAddPhy = [... new Set(gmailaddressPhy)];

          console.log("Physician gmailaddress", gmailAddPhy)
        });
    }


    function getDate() {
      $.ajax("../api/adminapi/getDate")
        .done(function (result) {


          result.forEach(item => {
            DateList.push(item.avadate);

          });

          listDate = [... new Set(DateList)];

          console.log("Date: ", listDate)





        });


    }







    $("#signin").click(e => {
      e.preventDefault()
      console.log("na clicck lagi ko")

      var gmail = $(".gmail").val();
      var pass = $(".password").val();

      if (gmail.trim() === "" || pass.trim() === "") {
        // SweetAlert for validation
        empty();
      } else if (gmailAdd.includes(gmail)) {
        $.ajax({
          url: "/api/adminapi/userloginAdmin",
          method: "POST",
          data: {
            "gmail": gmail,
            "password": pass
          },
          success: res => {
            sessionStorage.setItem("Logged", true)
            sessionStorage.setItem('userType', 'admin');

            var filterUserData = (gmail, pass) => AdminList.filter(user => user.gmail == gmail && user.password == pass);
            var filteredUserData = filterUserData(gmail, pass);

            sessionStorage.setItem('adminData', JSON.stringify(filteredUserData));

            displaySavedProgress();
            location.href = '/Admin/AdminCategory';
          },
          error: err => {
            gmailvalidation();
          }
        });

       } else if (gmailAddPhy.includes(gmail)) {
        $.ajax({
          url: "/api/adminapi/userloginPhysician",
          method: "POST",
          data: {
            "gmail": gmail,
            "password": pass
          },
          success: res => {
            sessionStorage.setItem("Logged", true)
            sessionStorage.setItem('userType', 'physician');

            var filterUserData = (gmail, pass) => PhyList.filter(user => user.gmail == gmail && user.pcode == pass);
            var filteredUserData = filterUserData(gmail, pass);

            sessionStorage.setItem('adminData', JSON.stringify(filteredUserData));

            displaySavedProgress();
            location.href = '/Admin/AdminStudent';
          },
          error: err => {
            gmailvalidation();
          }
        });
      } else {
        error();
      }


    })




    $("#buttonRecover").click(e => {
      e.preventDefault()


      var email = $(".inputrecover").val();

      if (email.trim() === "") {
        // SweetAlert for validation
        empty();


      } else {

        if (gmailAdd.includes(email)) {



          console.log("naa ras database")


          var filterUserData = AdminList.filter(user => user.gmail == email);
          console.log('filter', filterUserData)

          filterUserData.forEach(item => {
            // console.log(item.password);



            emailjs.init("4Djz2B1HMZ8LQD22Z"); // Account Public Key


            var params = {
              sendername: "FRV COLLEGE",
              to: item.gmail,
              subject: "health alerts",
              replyto: "angkol mj",
              message: item.password,
            };

            var serviceID = "service_wt1byeb"; // Email Service ID
            var templateID = "template_w3eqpec"; // Email Template ID

            emailjs.send(serviceID, templateID, params)
              .then(res => {
                alert("Email sent successfully!!")
              })
              .catch(

            );
          });



        } else {
          error();
        }

      }


    });









    const daysTag = $(".days"),
      currentDate = $(".current-date");

    let date = new Date(),
      currYear = date.getFullYear(),
      currMonth = date.getMonth();

    const months = ["January", "February", "March", "April", "May", "June", "July",
      "August", "September", "October", "November", "December"];

    const renderCalendar = () => {
      let firstDayofMonth = new Date(currYear, currMonth, 1).getDay(),
        lastDateofMonth = new Date(currYear, currMonth + 1, 0).getDate(),
        lastDayofMonth = new Date(currYear, currMonth, lastDateofMonth).getDay(),
        lastDateofLastMonth = new Date(currYear, currMonth, 0).getDate();
      let liTag = "";

      for (let i = firstDayofMonth; i > 0; i--) {
        liTag += `<li class="inactive">${lastDateofLastMonth - i + 1}</li>`;
      }




      for (let i = 1; i <= lastDateofMonth; i++) {
        let isActive = DateList.includes(`${currYear}-${(currMonth + 1).toString().padStart(2, '0')}-${i.toString().padStart(2, '0')}`) ? "active" : "";

        let customText = isActive ? "Available date for school medical checkup" : "";
        liTag += `<li class="${isActive}">${i}<span class="custom-text">${customText}</span></li>`;
      }



      for (let i = lastDayofMonth; i < 6; i++) {
        liTag += `<li class="inactive">${i - lastDayofMonth + 1}</li>`;
      }
      currentDate.text(`${months[currMonth]} ${currYear}`);
      daysTag.html(liTag);
    };
    renderCalendar();

    $(".icons span").click(function () {
      currMonth = $(this).attr("id") === "prev" ? currMonth - 1 : currMonth + 1;

      if (currMonth < 0 || currMonth > 11) {
        date = new Date(currYear, currMonth, new Date().getDate());
        currYear = date.getFullYear();
        currMonth = date.getMonth();
      } else {
        date = new Date();
      }
      renderCalendar();
    });










    function empty() {
      Swal.fire({
        icon: 'error',
        title: 'Validation Error',
        text: 'Please fill in all required fields!',
        confirmButtonText: 'OK'

      });
    }



    function error() {
      Swal.fire({
        icon: 'error',
        title: 'Email Account not found',
        text: 'Email is invalid!',
        confirmButtonText: 'OK'
      });
    }

    function gmailvalidation() {
      Swal.fire({
        icon: 'error',
        title: 'Incorrect Password and Email',
        text: 'Email and Password is invalid!',
        confirmButtonText: 'OK'
      });
    }


    function displaySavedProgress() {
      Swal.fire({
        icon: 'success',
        title: 'Welcome',
        text: 'Successfully Login',
        showConfirmButton: false,
        timer: 3500
      })

    }




  });//end of docuent ready

</script>
<style>
  .sidebar-wrapper {
    display: none;
  }
</style>
<h1>Nurse Index</h1>

<button type="button" title="Create Nurse" class="btn btn-success" style="color: #ffffff;" data-bs-toggle="modal"
    data-bs-target="#modalNurseCreate">
    <i class="fa-solid fa-circle-plus" style="color: #ffffff;"></i>
</button>


<template id="prabensOptionTemplate">
    <option value=""></option>
</template>



<template id="provincetemplate">
    <option value=""></option>
</template>

<template id="municipalitytemplate">
    <option value=""></option>
</template>

<template id="baranggaytemplate">
    <option value=""></option>
</template>


<div class="address">Address</div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label name="" class="control-label">Select Province</label>
                                    <select id="prabens" name="AddressProvince" class="form-select">
                                         <option value="" disabled selected>Select a Province</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label name="" class="control-label">Select Municipality</label>
                                    <select id="muni" name="AddressMunicipality" class="form-select">
                                    
                                    </select>
                                    
                                </div>
                            </div>


                             <div class="col-sm-6">
                                <div class="form-group">
                                    <label name="" class="control-label">Select Baranggay</label>
                                    <select id="barang" name="AddressBarangay" class="form-select">
        
                                    </select>
                                    
                                </div>
                            </div>



<div class="form-group">
    <label name="" class="control-label">province</label>
    @* <select id="province" name="DateId" class="form-select"></select> *@
    <input type="text" class="form-control" id="province">
</div>

<div class="form-group">
    <label name="" class="control-label">city</label>
    <select id="municipality" name="DateId" class="form-select"></select>
</div>
<div class="form-group">
    <label name="" class="control-label">Baranggay</label>
    <input type="text" class="form-control" id="baranggay">
</div>

<div class="autocomplete">
    <input type="text" id="baranggayInput" placeholder="Type a Baranggay name...">
    <ul id="suggestions"></ul>
</div>

<style>
    .autocomplete {
    position: relative;
    display: inline-block;
}

#baranggayInput {
    width: 300px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

#suggestions {
    position: absolute;
    width: 300px;
    list-style: none;
    padding: 0;
    margin: 0;
    background-color: white;
    border: 1px solid #ccc;
    border-top: none;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    display: none;
}


#suggestions li {
   
    padding: 10px;
    cursor: pointer;
    transition: background-color 0.2s;
}

#suggestions li:hover {
    background-color: #f0f0f0;
}

</style>








@* @Html.Partial("PartialDoctor/CreateDoctor")
@Html.Partial("PartialDoctor/DoctorTable")
@Html.Partial("PartialDoctor/DoctorUpdate") *@


<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
    var subMunicipalityData = {};
    var cityData = {};
    var provinceData = {};
    var baranggay;








    $(document).ready(function () {

        getprovince();
        getmunicipality();

         AddSelectPrabens();


      function AddSelectPrabens() {

            fetch("../../js/province.js")
                .then(response => response.json())
                .then(result => {



                    var template = document.querySelector("template#prabensOptionTemplate");
                    var parent = document.querySelectorAll("#prabens");


                    for (i = 0; i < parent.length; i++) {
                        result.forEach(function (item) {
                            var cloned = template.content.cloneNode(true);
                            cloned.querySelector("option").value = item.code;
                            cloned.querySelector("option").innerText = item.name;

                            parent[i].prepend(cloned);
                        });
                    }

                });
        }




        function getprovince() {

            $.ajax({
                url: "https://psgc.gitlab.io/api/provinces/072200000/",
                method: "GET",
                dataType: "json",
                success: function (result) {

                    provinceData = result;
                    console.log(result.name);
                    $("#province").val(result.name);
                },
                error: function (error) {
                    console.error("API request failed: " + error);
                }
            });
        }




        function getmunicipality() {
            $.ajax({
                url: "https://psgc.gitlab.io/api/provinces/072200000/cities-municipalities/",
                method: "GET",
                dataType: "json",
                success: function (result) {

                    cityData = result;
                    var template = document.querySelector("template#municipalitytemplate");

                    var parent = document.querySelectorAll("#municipality");

                    for (i = 0; i < parent.length; i++) {
                        result.forEach(function (item) {
                            var cloned = template.content.cloneNode(true);

                            cloned.querySelector("option").innerText = item.name;

                            parent[i].prepend(cloned);
                        });
                    }
                },
                error: function (error) {
                    console.error("API request failed: " + error);
                }
            });


        }


const baranggayInput = document.getElementById("baranggayInput");
const suggestions = document.getElementById("suggestions");

const data = [];

fetch("../../js/baranggay.js")
    .then(response => response.json())
    .then(data => {
        data = data;

       baranggayInput.addEventListener("input", function () {
        const inputText = baranggayInput.value;
        updateSuggestions(inputText,data);
    });

    document.addEventListener("click", function (event) {
        if (!suggestions.contains(event.target)) {
            suggestions.innerHTML = "";
        }
    });
    });


function updateSuggestions(inputText,data) {
    const filteredData = data.filter(function (item) {
        return item.name.toLowerCase().includes(inputText.toLowerCase());
    });

    renderSuggestions(filteredData);
}

function renderSuggestions(filteredData) {
    suggestions.innerHTML = "";

    filteredData.forEach(function (item) {
        const suggestionItem = document.createElement("li");
        suggestionItem.textContent = item.name;
        suggestionItem.addEventListener("click", function () {
            baranggayInput.value = item.name;
            suggestions.innerHTML = "";
        });
        suggestions.appendChild(suggestionItem);
    });

    if (filteredData.length > 0) {
        suggestions.style.display = "block";
    } else {
        suggestions.style.display = "none";
    }
}



























    });


</script>






















@* <script>
// var selectedDoctor;
// var selectedDoctorId;
var DoctorList = {};
var docfname;
var doclname;

$(document).ready(function () {

getDoctor();
displayDoctorData();

function getDoctor() {
$.ajax("../api/adminapi/getDoctor")
.done(function (result) {
DoctorList = result;
result.forEach(function (item) {
// console.log(item);
docfname = item.doctorFirstName;
doclname = item.doctorLastName;
});

});
}

$("#createDoctor").click((e) => {

console.log("yehey na click jyud ko");
// console.log(equipname);

var arrData = {}; //ayaw ni tan dug kani dre nga line
var formelements = $("#createDoctorForm .form-group");

//getting the data from the form
var formInputs = $("#createDoctorForm").serializeArray();
formInputs.forEach(function (item) {
arrData[item.name] = item.value;
});
console.log(formInputs);
//if (formInputs.length === formelements.length && formInputs[0].value !== '')
if (formInputs[0].value !== '') {

if (formInputs[0].value != docfname && formInputs[1].value != doclname) {
//AJAX ADD Equipment
$.ajax
({
url: "../api/adminapi/AddDoctor",
type: "POST",
data:
{
adddoc: arrData
},
})
.done(function () {

$("#createDoctorForm")[0].reset();
$("#modalDoctorCreate").modal("toggle");
getDoctor();
displaySavedProgress();
displayDoctorData();

});
} else {
vol1();
}


}
else {
alertError();
}
});

function displayDoctorData() {
$('#DoctorData').DataTable().destroy();
if (!$.fn.DataTable.isDataTable('#DoctorData')) {
$('#DoctorData').DataTable({
ajax: {
url: '../api/adminapi/getDoctor',
dataSrc: ''
},
columns:
[
{ data: 'doctorId' },
{ data: 'doctorFirstName' },
{ data: 'doctorLastName' },
{ data: 'doctorAddress' },
{ data: 'doctorGmailAcc' },
{ data: 'status' },
{
data: 'doctorId',
render: function (data, type, row) {
return btnAddDoctor(data);
}
},
]
});
}
getDoctor();
}

function btnAddDoctor(doctorId) {
return "<center><a class='btn btn-success DoctorUpdate' data-doctorId=" + doctorId + "><i class='fa-solid
fa-pen-to-square' style='color : #ffffff;'></i></a> | <a class='btn btn-danger DoctorDelete' data-doctorId=" + doctorId
+ "><i class='fa-solid fa-trash' style='color : #ffffff;'></i></a></center>"
}


$("tbody").delegate(".DoctorUpdate", "click", function (e) {
console.log("I was clicked");
var i = e.target.closest("a").getAttribute("data-doctorId");
if (i != null) {
$("#createDoctorForm")[0].reset();
$("#modalDoctorUpdate").modal("toggle");

selectedDoctorId = i;
selectedDoctor = DoctorList.find(element => element.doctorId == i);

oFormObject = document.forms["updateDoctorForm"];
initForm(oFormObject, selectedDoctor);
}
});

function initForm(form, data) {

Object.getOwnPropertyNames(data).forEach(function (item) {
var currentElem = form.elements[item.charAt(0).toUpperCase() + item.slice(1)];

if (currentElem == null) { return; }
form.elements[item.charAt(0).toUpperCase() + item.slice(1)].setAttribute("value", data[item]);
if (data.status == "Active") {
$('.stat').prop('checked', true);
}

else {
$('.stat').prop('checked', false);
}
});
}

$("#updateDoctors").click(function () {
alertSaveChanges();
});

function alertSaveChanges() {
Swal.fire({
title: 'Do you want to save the changes?',
confirmButtonText: 'Save',
showCancelButton: true,
}).then((result) => {
/* Read more about isConfirmed, isDenied below */
if (result.isConfirmed) {
updateDoctorHolder();
}
})
}

function updateDoctorHolder() {
console.log(arrData);
var arrData = {};
var formelements = $("#updateDoctorForm .form-group");

//getting the data from the form
var formInputs = $("#updateDoctorForm").serializeArray();
formInputs.forEach(function (item) {
arrData[item.name] = item.value;
});
arrData.doctorId = selectedDoctorId; //check this area kay kung masayop kas id mo duplicate siya

if (formInputs[0].value !== '') {
proceedUpdate(arrData);
console.log("gi click lagi ko " + arrData);
} else {
alertError();
}
}
function proceedUpdate(arrData) {
//AJAX UPDATE DEPARTMENT
$.ajax
({
url: "../api/adminapi/updateDoctor",
type: "POST",
data:
{
updoc: arrData,
},
})
.done(function () {
$("#updateDoctorForm")[0].reset();
$("#modalDoctorUpdate").modal("toggle");
displayDoctorData();
displaySavedProgress();
});
}



$("tbody").delegate(".DoctorDelete", "click", function (e) {
var i = e.target.closest("a").getAttribute("data-doctorId");
if (i != null) {
//Insert code here for the delete
selectedDoctorId = i;
console.log(selectedDoctorId + "mao ni siya");
alertDeleteConfirmation();
}
});

function alertDeleteConfirmation() {
Swal.fire({
title: 'Are you sure?',
text: "You won't be able to Delete this!",
icon: 'warning',
showCancelButton: true,
confirmButtonColor: '#3085d6',
cancelButtonColor: '#d33',
confirmButtonText: 'Yes, delete it!'
}).then((result) => {
if (result.isConfirmed) {
proceedDelete();
}
})
}

function proceedDelete() {
console.log(selectedDoctorId + "proceed");
//AJAX DELETE DEPARTMENT
$.ajax
({
url: "../api/adminapi/deleteDoctor",
type: "POST",
data:
{
id: selectedDoctorId
},
})
.done(function () {
displayDoctorData();
alertDeleteInfo();
});
}















function alertDeleteInfo() {
Swal.fire(
'Deleted!',
'Your file has been deleted.',
'success'
)
}


function vol1() {
Swal.fire({
icon: 'error',
title: 'Oops...',
text: 'Inputted name is already in the data',
})
}
function alertError() {
Swal.fire({
icon: 'error',
title: 'Oops...',
text: 'Input the necessary elements!',
})
}

function displaySavedProgress() {
Swal.fire({
icon: 'success',
title: 'Your work has been saved',
showConfirmButton: false,
timer: 1500
})

}

}); //dont touch this
</script> *@
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>View Health Profile</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/homepage.css">





</head>

<body>

    <header style="background: linear-gradient(to right, #16222a, #3a6073);">
        <div class="container">
            <h1>View Health Profile</h1>
        </div>
    </header>

    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container">
            <a class="navbar-brand" asp-area="" asp-controller="User" asp-action="studenthealthprofile">Health
                Profile</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">



                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="User" asp-action="Appoint">Appoint Schedule</a>
                    </li>



                    <li class="nav-item">
                        @* <a class="nav-link" asp-area="" asp-controller="User" asp-action="Home">Logout</a> *@
                        <a class="nav-link btnLogout">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <section class="s1">
        <div class="container">
            <div class="schedule">
                @Html.Partial("PartialViewHealthProfileAndSchedule/Profile")
                @Html.Partial("PartialViewHealthProfileAndSchedule/cardtable")

                <center>
                    <p style="margin-top: 50px; font-weight: bold; font-size: 30px;">See your previous and present
                        health profile</p>
                </center>
                @Html.Partial("PartialViewHealthProfileAndSchedule/Comparechart")
                @Html.Partial("PartialViewHealthProfileAndSchedule/modalHealthProfile")
            </div>
        </div>
    </section>


    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</body>

</html>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    var sampleValueHI;
    var sampleValueHIId;
    var StudentHIList = {};
    var arr = {};
    var disdate = {};
    var dateClick;
    var dateComp = {};
    var selectedID;
    var filteredData = {};
    var Comp = {};


    $(document).ready(function () {
        margin();
        populateIndex();

        var userType = sessionStorage.getItem('userType');

        if (userType === null) {
            window.location.href = "/User/practLogin";
        }
        else {
            if (userType === "admin") {
                window.location.href = "/Admin/AdminCategory";
            }
        }

        $(".btnLogout").click((e) => {
            sessionStorage.clear();
            localStorage.clear();
            window.location.href = "/User/practLogin";
        });


        function populateIndex() {

            $.ajax("../api/adminapi/getStudentHI")
                .done(function (result) {



                    //   dateComp = data;
                    //  StudentHIList = data;
                    //   sampleValueHIId = 9;

                    var retrievedArray = JSON.parse(localStorage.getItem('userData'));

                    retrievedArray.forEach(function (item) {
                        sampleValueHIId = item.spiId;

                        $("#Username").html(item.fullname);
                        $("#Usergmail").html(item.gmailaddress);
                        $("#UserProgam").html(item.courseStrandYearName);


                    });

                    dateComp = result.filter(function (item) {
                        return item.spiId == sampleValueHIId;
                    });

                    console.log("dateComp", dateComp)
                    Compare(dateComp);

                    document.querySelector(".parent").innerHTML = "";


                    // Remove duplicates based on 'datet'
                    let uniqueData = [];
                    let seenDates = new Set();

                    dateComp.forEach(entry => {
                        if (!seenDates.has(entry.datet)) {
                            seenDates.add(entry.datet);
                            uniqueData.push(entry);
                        }
                    });







                    // Display unique data
                    //   console.log(uniqueData);

                    disdate = uniqueData;



                    uniqueData.forEach(function (item) {

                        var template = document.querySelector("template#card-container");
                        var parent = document.querySelector(".parent");
                        var cloned = template.content.cloneNode(true);



                        cloned.querySelector(".card .card-title").innerHTML = item.datet;


                        cloned.querySelector(".datecard").setAttribute("data-datet", item.datet);

                        parent.prepend(cloned);
                    });
                });






        }// end of funcction populate



        const Compare = datecomp => {




            $.ajax("../api/adminapi/getNR")
                .done(function (result) {

                    var b = [];

                    b = result.filter(function (item) {
                        return item.test === "Neutrophils" && item.unitname === "%";
                    });


                    var c = [];

                    c = result.filter(function (item) {
                        return item.test === "WBC" && item.unitname === "x(10^9)/L";
                    });

                    var d = [];

                    d = result.filter(function (item) {
                        return item.test === "Lymphocyte" && item.unitname === "%";
                    });

                    console.log('detriot', d)


                    var e = [];

                    e = result.filter(function (item) {
                        return item.test === "Basophil" && item.unitname === "%";
                    });

                    var f = [];

                    f = result.filter(function (item) {
                        return item.test === "Eosinophil" && item.unitname === "%";
                    });

                    var g = [];

                    g = result.filter(function (item) {
                        return item.test === "Hematocrit" && item.unitname === "mg/dl";
                    });


                    var h = [];

                    h = result.filter(function (item) {
                        return item.test === "Hemoglobin" && item.unitname === "mg/dl";
                    });


                    var i = [];

                    i = result.filter(function (item) {
                        return item.test === "MCH" && item.unitname === "pg";
                    });

                    var j = [];

                    j = result.filter(function (item) {
                        return item.test === "MCHC" && item.unitname === "g/dL";
                    });

                    var k = [];

                    k = result.filter(function (item) {
                        return item.test === "MCV" && item.unitname === "fL";
                    });

                    var l = [];

                    l = result.filter(function (item) {
                        return item.test === "Monocyte" && item.unitname === "%";
                    });


                    var m = [];

                    m = result.filter(function (item) {
                        return item.test === "MPV" && item.unitname === "fL";
                    });

                    var n = [];

                    n = result.filter(function (item) {
                        return item.test === "Platelet Count" && item.unitname === "x(10^9)/L";
                    });

                    var o = [];

                    o = result.filter(function (item) {
                        return item.test === "RBC" && item.unitname === "10^12/L";
                    });

                    var p = [];

                    p = result.filter(function (item) {
                        return item.test === "RCDW" && item.unitname === "%";
                    });







                    var chartData = datecomp.map(function (data, index) {

                        // Check Neutrophils value against maxRange and minRange
                        const neutrophilsColors = data.neutrophils >= b[0].minRange && data.neutrophils <= b[0].maxRange ? 'green' : 'red';
                   
                        console.log(Chart.version);
                        console.log(neutrophilsColors);




                       
                        return {
                            label: data.datet,
                            backgroundColor: neutrophilsColors,
                            borderColor: neutrophilsColors,
                            borderWidth: 1,
                            data: [data.neutrophils],
                        };


                    });


                    var wbchartData = datecomp.map(function (data, index) {

                        const wbcColors = data.wbc >= c[0].minRange && data.wbc <= c[0].maxRange ? 'green' : 'red';



                        return {
                            label: data.datet,
                            backgroundColor: [wbcColors],
                            borderColor: [wbcColors],
                            borderWidth: 1,
                            data: [data.wbc],
                        };


                    });

                    var lymhartData = datecomp.map(function (data, index) {

                        const lymColors = data.lymphocyte >= d[0].minRange && data.lymphocyte <= d[0].maxRange ? 'green' : 'red';




                        return {
                            label: data.datet,
                            backgroundColor: [lymColors],
                            borderColor: [lymColors],
                            borderWidth: 1,
                            data: [data.lymphocyte],
                        };


                    });


                    var eosihartData = datecomp.map(function (data, index) {

                        const eosiColors = data.eosinophil >= f[0].minRange && data.eosinophil <= f[0].maxRange ? 'green' : 'red';



                        return {
                            label: data.datet,
                            backgroundColor: [eosiColors],
                            borderColor: [eosiColors],
                            borderWidth: 1,
                            data: [data.eosinophil],
                        };


                    });



                    var basohartData = datecomp.map(function (data, index) {

                        const basoColors = data.basophil >= e[0].minRange && data.basophil <= e[0].maxRange ? 'green' : 'red';

                        return {
                            label: data.datet,
                            backgroundColor: [basoColors],
                            borderColor: [basoColors],
                            borderWidth: 1,
                            data: [data.basophil],
                        };


                    });



                    var hemahartData = datecomp.map(function (data, index) {

                        const hemaColors = data.hematocrit >= g[0].minRange && data.hematocrit <= g[0].maxRange ? 'green' : 'red';

                        return {
                            label: data.datet,
                            backgroundColor: [hemaColors],
                            borderColor: [hemaColors],
                            borderWidth: 1,
                            data: [data.hematocrit],
                        };


                    });



                    var hemohartData = datecomp.map(function (data, index) {

                        const hemoColors = data.hemoglobin >= h[0].minRange && data.hemoglobin <= h[0].maxRange ? 'green' : 'red';

                        return {
                            label: data.datet,
                            backgroundColor: [hemoColors],
                            borderColor: [hemoColors],
                            borderWidth: 1,
                            data: [data.hemoglobin],
                        };


                    });

                    var mchhartData = datecomp.map(function (data, index) {

                        const mchColors = data.mch >= i[0].minRange && data.mch <= i[0].maxRange ? 'green' : 'red';


                        return {
                            label: data.datet,
                            backgroundColor: [mchColors],
                            borderColor: [mchColors],
                            borderWidth: 1,
                            data: [data.mch],
                        };


                    });

                    var mchchartData = datecomp.map(function (data, index) {


                        const mchcColors = data.mchc >= j[0].minRange && data.mchc <= j[0].maxRange ? 'green' : 'red';

                        return {
                            label: data.datet,
                            backgroundColor: [mchcColors],
                            borderColor: [mchcColors],
                            borderWidth: 1,
                            data: [data.mchc],
                        };


                    });

                    var mcvhartData = datecomp.map(function (data, index) {

                        const mcvColors = data.mcv >= k[0].minRange && data.mcv <= k[0].maxRange ? 'green' : 'red';


                        return {
                            label: data.datet,
                            backgroundColor: [mcvColors],
                            borderColor: [mcvColors],
                            borderWidth: 1,
                            data: [data.mcv],
                        };


                    });


                    var monohartData = datecomp.map(function (data, index) {

                        const monoColors = data.monocyte >= l[0].minRange && data.monocyte <= l[0].maxRange ? 'green' : 'red';


                        return {
                            label: data.datet,
                            backgroundColor: [monoColors],
                            borderColor: [monoColors],
                            borderWidth: 1,
                            data: [data.monocyte],
                        };


                    });


                    var mpvhartData = datecomp.map(function (data, index) {


                        const mpvColors = data.mpv >= m[0].minRange && data.mpv <= m[0].maxRange ? 'green' : 'red';

                        return {
                            label: data.datet,
                            backgroundColor: [mpvColors],
                            borderColor: [mpvColors],
                            borderWidth: 1,
                            data: [data.mpv],
                        };


                    });


                    var plhartData = datecomp.map(function (data, index) {

                        const plColors = data.plateletcount >= n[0].minRange && data.plateletcount <= n[0].maxRange ? 'green' : 'red';


                        return {
                            label: data.datet,
                            backgroundColor: [plColors],
                            borderColor: [plColors],
                            borderWidth: 1,
                            data: [data.plateletcount],
                        };


                    });


                    var rbchartData = datecomp.map(function (data, index) {

                        const rbcColors = data.rbc >= o[0].minRange && data.rbc <= o[0].maxRange ? 'green' : 'red';


                        return {
                            label: data.datet,
                            backgroundColor: [rbcColors],
                            borderColor: [rbcColors],
                            borderWidth: 1,
                            data: [data.rbc],
                        };


                    });


                    var rcdwhartData = datecomp.map(function (data, index) {

                        const rcdwColors = data.rcdw >= p[0].minRange && data.rcdw <= p[0].maxRange ? 'green' : 'red';


                        return {
                            label: data.datet,
                            backgroundColor: [rcdwColors],
                            borderColor: [rcdwColors],
                            borderWidth: 1,
                            data: [data.rcdw],
                        };


                    });





                    // Chart.js configuration
                    var datos = {
                        labels: ['Neutrophils 47-80'],
                        datasets: chartData,
                    };

                    // Chart.js configuration
                    var wbcData = {
                        labels: ['WBC 4.1-10.9'],
                        datasets: wbchartData,
                    };

                    // Chart.js configuration
                    var lymData = {
                        labels: ['Lympocyte 13-40'],
                        datasets: lymhartData,
                    };

                    // Chart.js configuration
                    var basoData = {
                        labels: ['Basophil 0-2'],
                        datasets: basohartData,
                    };

                    // Chart.js configuration
                    var eosiData = {
                        labels: ['Eosinophil 0-5'],
                        datasets: eosihartData,
                    };

                    // Chart.js configuration
                    var hemaData = {
                        labels: ['Hematocrit 36-46'],
                        datasets: hemahartData,
                    };

                    // Chart.js configuration
                    var hemoData = {
                        labels: ['Hemoglobin 12-16'],
                        datasets: hemohartData,
                    };

                    // Chart.js configuration
                    var mchData = {
                        labels: ['Mch 26-34'],
                        datasets: mchhartData,
                    };

                    // Chart.js configuration
                    var mchcData = {
                        labels: ['Mchc 31-36'],
                        datasets: mchchartData,
                    };

                    // Chart.js configuration
                    var monoData = {
                        labels: ['Monocyte 2-11'],
                        datasets: monohartData,
                    };

                    // Chart.js configuration
                    var mpvData = {
                        labels: ['Mpv 6.9-11'],
                        datasets: mpvhartData,
                    };


                    // Chart.js configuration
                    var plData = {
                        labels: ['Platelet Count 140-440'],
                        datasets: plhartData,
                    };

                    // Chart.js configuration
                    var rbcData = {
                        labels: ['Rbc 4.5-9.5'],
                        datasets: rbchartData,
                    };

                    // Chart.js configuration
                    var rcdwData = {
                        labels: ['Rcdw 11.6-14.8'],
                        datasets: rcdwhartData,
                    };

                    // Chart.js configuration
                    var mcvData = {
                        labels: ['Mcv 26-34'],
                        datasets: mcvhartData,
                    };



                    const configCom = {
                        type: "bar",
                        data: datos,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };

                    const wbc_configCom = {
                        type: "bar",
                        data: wbcData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };

                    const lym_configCom = {
                        type: "bar",
                        data: lymData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };

                    const baso_configCom = {
                        type: "bar",
                        data: basoData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };


                    const eosi_configCom = {
                        type: "bar",
                        data: eosiData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };


                    const hema_configCom = {
                        type: "bar",
                        data: hemaData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };

                    const hemp_configCom = {
                        type: "bar",
                        data: hemoData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };


                    const mch_configCom = {
                        type: "bar",
                        data: mchData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };


                    const mchc_configCom = {
                        type: "bar",
                        data: mchcData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };

                    const mcv_configCom = {
                        type: "bar",
                        data: mcvData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };

                    const mono_configCom = {
                        type: "bar",
                        data: monoData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };

                    const pl_configCom = {
                        type: "bar",
                        data: plData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };

                    const mpv_configCom = {
                        type: "bar",
                        data: mpvData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };


                    const rbc_configCom = {
                        type: "bar",
                        data: rbcData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };


                    const rcdw_configCom = {
                        type: "bar",
                        data: rcdwData,
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    };




                    // Render the chart
                    const myComChart = new Chart(document.getElementById("comChart"), configCom);
                    const wbcComChart = new Chart(document.getElementById("wbc_com"), wbc_configCom);
                    const lymComChart = new Chart(document.getElementById("com_lym"), lym_configCom);
                    const basoComChart = new Chart(document.getElementById("com_baso"), baso_configCom);
                    const eosiComChart = new Chart(document.getElementById("com_eosi"), eosi_configCom);
                    const hemaComChart = new Chart(document.getElementById("com_hema"), hema_configCom);
                    const hemoComChart = new Chart(document.getElementById("com_hemo"), hemp_configCom);
                    const mchComChart = new Chart(document.getElementById("com_mch"), mch_configCom);
                    const mchcComChart = new Chart(document.getElementById("com_mchc"), mchc_configCom);
                    const mcvComChart = new Chart(document.getElementById("com_mcv"), mcv_configCom);
                    const monoComChart = new Chart(document.getElementById("com_mono"), mono_configCom);
                    const mpvComChart = new Chart(document.getElementById("com_mpv"), mpv_configCom);
                    const plComChart = new Chart(document.getElementById("com_pl"), pl_configCom);
                    const rbcComChart = new Chart(document.getElementById("com_rbc"), rbc_configCom);
                    const rcdwComChart = new Chart(document.getElementById("com_rcdw"), rcdw_configCom);
                  

                    // Adjust container width dynamically based on the number of labels
                    const ComcontainerBody = document.querySelector(".comcontainerBody");
                    const ComtotalLabels = myComChart.data.labels.length;

                    if (ComtotalLabels > 7) {
                        const ComnewWidth = 700 + (ComtotalLabels - 7) * 30;
                        ComcontainerBody.style.width = `${ComnewWidth}px`;
                    }





                });



        };









        $('#AsearchText').on("input", function () {
            var searchedItem = $(this).val();

            //console.log(searchedItem);

            var search = disdate.filter(element => element.datet.toLowerCase().includes(searchedItem.toLowerCase()) || element.datet.toUpperCase().includes(searchedItem.toUpperCase()));
            //console.log(sear);

            document.querySelector(".parent").innerHTML = "";

            search.forEach(function (item) {
                var template = document.querySelector("template#card-container");
                var parent = document.querySelector(".parent");
                var cloned = template.content.cloneNode(true);

                cloned.querySelector(".card .card-title").innerHTML = item.datet;


                cloned.querySelector(".datecard").setAttribute("data-datet", item.datet);


                parent.prepend(cloned);
            });


        });//end offuncction search


        $("#modalStudentHealthInfoClose").click(function () {
            location.href = '/user/StudentHealthProfile';
        });








        $(".parent").delegate(".datecard", "click", function (e) {



            $("#modalStudentHealthInfo").modal("toggle");

            // console.log("na click najyud");
            var i = e.target.closest("div").getAttribute("data-datet");

            console.log("salamat sa pag click", i);



            if (i != null) {
                dateClick = i;
                console.log(dateClick + "mao ni siya");


                //filtere data that have th same value on selected date

                filteredData = dateComp.filter(function (entry) {
                    return entry.datet === dateClick;
                });

                console.log("filter", filteredData);

                filteredData.forEach(function (sampleValue) {

                    //    console.log(selectedStudent);
                    $(".cardInfo .info-Name").html('Name :' + sampleValue.fullname);
                    $(".cardInfo .info-AgeGender").html('Age/Gender : ' + sampleValue.age + '&nbsp;Year / ' + sampleValue.gender);
                    $(".cardInfo .info-Birthdate").html('Birthdate : &emsp;' + sampleValue.birthdate);
                    $(".cardInfo .info-HN").html('Hospital No. ' + sampleValue.hospitalnumber);
                    $(".cardInfo .info-SPID").html('Specimen ID :' + sampleValue.shiId);
                    $(".cardInfo .info-Physician").html('Physician: &emsp;' + sampleValue.cbcphysician);
                    $(".cardInfo .info-requested").html('Date Time Requested :&emsp;' + sampleValue.cbcdatetimerequested);
                    $(".cardInfo .info-draw").html('Draw Date & Time : &emsp;' + sampleValue.cbcdrawdatetime);




                    $.ajax("../api/adminapi/getNR")
                        .done(function (result) {

                            var b = [];

                            b = result.filter(function (item) {
                                return item.test === "Neutrophils" && item.unitname === "%";
                            });
                            console.log(b)

                            var c = [];

                            c = result.filter(function (item) {
                                return item.test === "WBC" && item.unitname === "x(10^9)/L";
                            });

                            var d = [];

                            d = result.filter(function (item) {
                                return item.test === "Lymphocyte" && item.unitname === "%";
                            });


                            var e = [];

                            e = result.filter(function (item) {
                                return item.test === "Basophil" && item.unitname === "%";
                            });

                            var f = [];

                            f = result.filter(function (item) {
                                return item.test === "Eosinophil" && item.unitname === "%";
                            });

                            var g = [];

                            g = result.filter(function (item) {
                                return item.test === "Hematocrit" && item.unitname === "mg/dl";
                            });


                            var h = [];

                            h = result.filter(function (item) {
                                return item.test === "Hemoglobin" && item.unitname === "mg/dl";
                            });


                            var i = [];

                            i = result.filter(function (item) {
                                return item.test === "MCH" && item.unitname === "pg";
                            });

                            var j = [];

                            j = result.filter(function (item) {
                                return item.test === "MCHC" && item.unitname === "g/dL";
                            });

                            var k = [];

                            k = result.filter(function (item) {
                                return item.test === "MCV" && item.unitname === "fL";
                            });

                            var l = [];

                            l = result.filter(function (item) {
                                return item.test === "Monocyte" && item.unitname === "%";
                            });


                            var m = [];

                            m = result.filter(function (item) {
                                return item.test === "MPV" && item.unitname === "fL";
                            });

                            var n = [];

                            n = result.filter(function (item) {
                                return item.test === "Platelet Count" && item.unitname === "x(10^9)/L";
                            });

                            var o = [];

                            o = result.filter(function (item) {
                                return item.test === "RBC" && item.unitname === "10^12/L";
                            });

                            var p = [];

                            p = result.filter(function (item) {
                                return item.test === "RCDW" && item.unitname === "%";
                            });



                            console.log('Reccieving ID', sampleValue.shiId);



                            // console.log(sampleValue.neutrophils)
                            // Check Neutrophils value against maxRange and minRange
                            const neutrophilsColor = sampleValue.neutrophils >= b[0].minRange && sampleValue.neutrophils <= b[0].maxRange ? 'green' : 'red';
                            // Check WBC value against maxRange and minRange
                            const wbcColor = sampleValue.wbc >= c[0].minRange && sampleValue.wbc <= c[0].maxRange ? 'green' : 'red';
                            const lymColor = sampleValue.lymphocyte >= d[0].minRange && sampleValue.lymphocyte <= d[0].maxRange ? 'green' : 'red';
                            const basoColor = sampleValue.basophil >= e[0].minRange && sampleValue.basophil <= e[0].maxRange ? 'green' : 'red';
                            const eosiColor = sampleValue.eosinophil >= f[0].minRange && sampleValue.eosinophil <= f[0].maxRange ? 'green' : 'red';
                            const hemaColor = sampleValue.hematocrit >= g[0].minRange && sampleValue.hematocrit <= g[0].maxRange ? 'green' : 'red';
                            const hemoColor = sampleValue.hemoglobin >= h[0].minRange && sampleValue.hemoglobin <= h[0].maxRange ? 'green' : 'red';
                            const mchColor = sampleValue.mch >= i[0].minRange && sampleValue.mch <= i[0].maxRange ? 'green' : 'red';
                            const mchcColor = sampleValue.mchc >= j[0].minRange && sampleValue.mchc <= j[0].maxRange ? 'green' : 'red';
                            const mcvColor = sampleValue.mcv >= k[0].minRange && sampleValue.mcv <= k[0].maxRange ? 'green' : 'red';
                            const monoColor = sampleValue.monocyte >= l[0].minRange && sampleValue.monocyte <= l[0].maxRange ? 'green' : 'red';
                            const mpvColor = sampleValue.mpv >= m[0].minRange && sampleValue.mpv <= m[0].maxRange ? 'green' : 'red';
                            const plColor = sampleValue.plateletcount >= n[0].minRange && sampleValue.plateletcount <= n[0].maxRange ? 'green' : 'red';
                            const rbcColor = sampleValue.rbc >= o[0].minRange && sampleValue.rbc <= o[0].maxRange ? 'green' : 'red';
                            const rcdwColor = sampleValue.rcdw >= p[0].minRange && sampleValue.rcdw <= p[0].maxRange ? 'green' : 'red';


                            console.log(Chart.version);
                            console.log(neutrophilsColor, wbcColor, lymColor, basoColor, eosiColor, hemaColor, hemoColor, mchColor, mchcColor, mcvColor, monoColor, mpvColor, plColor, rbcColor, rcdwColor);




                            var _neutrophils = {
                                labels: ['Neutrophils 47-80'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.neutrophils],
                                    backgroundColor: [neutrophilsColor],
                                    borderColor: [neutrophilsColor],
                                    borderWidth: 1
                                }]
                            };



                            var _wbc = {
                                labels: ['WBC 4.1-10.9'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.wbc],
                                    backgroundColor: [wbcColor],
                                    borderColor: [wbcColor],
                                    borderWidth: 1
                                }]
                            };

                            var _lymphocyte = {
                                labels: ['Lympocyte 13-40'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.lymphocyte],
                                    backgroundColor: [lymColor],
                                    borderColor: [lymColor],
                                    borderWidth: 1
                                }]
                            };

                            var _basophil = {
                                labels: ['Basophil 0-2'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.basophil],
                                    backgroundColor: [basoColor],
                                    borderColor: [basoColor],
                                    borderWidth: 1
                                }]
                            };

                            var _eosinophil = {
                                labels: ['Eosinophil 0-5'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.eosinophil],
                                    backgroundColor: [eosiColor],
                                    borderColor: [eosiColor],
                                    borderWidth: 1
                                }]
                            };


                            var _hematocrit = {
                                labels: ['Hematocrit 36-46'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.hematocrit],
                                    backgroundColor: [hemaColor],
                                    borderColor: [hemaColor],
                                    borderWidth: 1
                                }]
                            };


                            var _hemoglobin = {
                                labels: ['Hemoglobin 12-16'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.hemoglobin],
                                    backgroundColor: [hemoColor],
                                    borderColor: [hemoColor],
                                    borderWidth: 1
                                }]
                            };


                            var _mch = {
                                labels: ['Mch 26-34'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.mch],
                                    backgroundColor: [mchColor],
                                    borderColor: [mchColor],
                                    borderWidth: 1
                                }]
                            };


                            var _mcv = {
                                labels: ['Mcv 26-34'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.mcv],
                                    backgroundColor: [mcvColor],
                                    borderColor: [mcvColor],
                                    borderWidth: 1
                                }]
                            };


                            var _mchc = {
                                labels: ['Mchc 31-36'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.mchc],
                                    backgroundColor: [mchcColor],
                                    borderColor: [mchcColor],
                                    borderWidth: 1
                                }]
                            };



                            var _monocyte = {
                                labels: ['Monocyte 2-11'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.monocyte],
                                    backgroundColor: [monoColor],
                                    borderColor: [monoColor],
                                    borderWidth: 1
                                }]
                            };



                            var _mpv = {
                                labels: ['Mpv 6.9-11'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.mpv],
                                    backgroundColor: [mpvColor],
                                    borderColor: [mpvColor],
                                    borderWidth: 1
                                }]
                            };



                            var _pl = {
                                labels: ['Platelet Count 140-440'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.plateletcount],
                                    backgroundColor: [plColor],
                                    borderColor: [plColor],
                                    borderWidth: 1
                                }]
                            };



                            var _rbc = {
                                labels: ['Rbc 4.5-9.5'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.rbc],
                                    backgroundColor: [rbcColor],
                                    borderColor: [rbcColor],
                                    borderWidth: 1
                                }]
                            };



                            var _rcdw = {
                                labels: ['Rcdw 11.6-14.8'],
                                datasets: [{
                                    label: 'Blood Count',
                                    data: [sampleValue.rcdw],
                                    backgroundColor: [rcdwColor],
                                    borderColor: [rcdwColor],
                                    borderWidth: 1
                                }]
                            };


                            // config 
                            const config = {
                                type: 'bar',
                                data: _neutrophils,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };



                            // config 
                            const wbc_config = {
                                type: 'bar',
                                data: _wbc,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };


                            // config 
                            const lym_config = {
                                type: 'bar',
                                data: _lymphocyte,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };


                            const baso_config = {
                                type: 'bar',
                                data: _basophil,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };

                            const eosi_config = {
                                type: 'bar',
                                data: _eosinophil,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };

                            const hema_config = {
                                type: 'bar',
                                data: _hematocrit,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };


                            const hemo_config = {
                                type: 'bar',
                                data: _hemoglobin,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };


                            const mch_config = {
                                type: 'bar',
                                data: _mch,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };

                            const mchc_config = {
                                type: 'bar',
                                data: _mchc,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };
                            const monocyte_config = {
                                type: 'bar',
                                data: _monocyte,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };
                            const mpv_config = {
                                type: 'bar',
                                data: _mpv,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };
                            const pl_config = {
                                type: 'bar',
                                data: _pl,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };

                            const rbc_config = {
                                type: 'bar',
                                data: _rbc,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };


                            const rcdw_config = {
                                type: 'bar',
                                data: _rcdw,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };


                            const mcv_config = {
                                type: 'bar',
                                data: _mcv,
                                options: {
                                    maintainAspectRatio: false, // Set to false to make it responsive
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            };





                            // render init block
                            const myChart = new Chart(
                                document.getElementById('myChart'), config
                            );

                            const myChartwbc = new Chart(
                                document.getElementById('_wbc'), wbc_config
                            );

                            const myChartlym = new Chart(
                                document.getElementById('_lym'), lym_config
                            );

                            const myChartbaso = new Chart(
                                document.getElementById('_baso'), baso_config
                            );

                            const myCharteosi = new Chart(
                                document.getElementById('_eosi'), eosi_config
                            );

                            const myCharthema = new Chart(
                                document.getElementById('_hema'), hema_config
                            );

                            const myCharthemo = new Chart(
                                document.getElementById('_hemo'), hemo_config
                            );

                            const myChartmcv = new Chart(
                                document.getElementById('_mcv'), mcv_config
                            );


                            const myChartmch = new Chart(
                                document.getElementById('_mch'), mch_config
                            );

                            const myChartmchc = new Chart(
                                document.getElementById('_mchc'), mchc_config
                            );

                            const myChartmono = new Chart(
                                document.getElementById('_mono'), monocyte_config
                            );

                            const myChartmpv = new Chart(
                                document.getElementById('_mpv'), mpv_config
                            );

                            const myChartpl = new Chart(
                                document.getElementById('_pl'), pl_config
                            );

                            const myChartrbc = new Chart(
                                document.getElementById('_rbc'), rbc_config
                            );

                            const myChartrcdw = new Chart(
                                document.getElementById('_rcdw'), rcdw_config
                            );





















                            // Adjust container width dynamically based on the number of labels
                            const containerBody = document.querySelector('.containerBody');

                            const totalLabels = myChart.data.labels.length;

                            if (totalLabels > 7) {
                                const newWidth = 700 + ((totalLabels - 7) * 30)
                                containerBody.style.width = `${newWidth}%`;
                            }





                        });//end f the funcction





                });



            }

        });// end of selecting date record




        function margin() {

            $(".page-content").removeClass();
            $(".container-fluid").removeClass();
        }

    });// end for jquery

</script>
<style>
    .sidebar-wrapper {
        display: none;
    }

    .btn-width {
        padding: 10px 100px 10px 100px;

    }
</style>
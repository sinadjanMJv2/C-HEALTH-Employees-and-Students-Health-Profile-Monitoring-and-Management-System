<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FRV COLLEGE USER</title>


    <style>
      
       
        .head{

            padding: 10px;
            color: #fff;
        }

        .container {
            margin-top: 20px;

        }


        .containers{
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .form-container {
            width: 300px;
        }

        .form {
            background-color: #fff;
            padding: 20px;
        }
        .heads{
          margin-bottom: 20px;
        }

        header {
            text-align: center;
            font-size: 24px;
            font-weight: bold;
           
        }

        .form button,
        input {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
        }

        .button {
            padding: 10px 20px;
            background-color: #4caf50;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .signup-label {
            display: block;
            margin-top: 10px;
            text-align: center;
            color: blue;
            cursor: pointer;
            text-decoration: underline;
        }

        .form:not(:first-child) {
            display: none;
        }

        .sidebar-wrapper {
            display: none;
        }
    </style>
</head>

<body>
    <header class="head" style="background: linear-gradient(to right, #16222a, #3a6073);">
        <div class="container">
            <h1>View and explore more</h1>
        </div>
    </header>
     <nav class="navbar navbar-expand-lg navbar-light bg-light" id="navbar">
        <div class="container">
            <a class="navbar-brand" asp-area="" asp-controller="User" asp-action="ViewMed">Available Medicine</a>

            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">

                    <li class="nav-item">
                        <a class="nav-link" href="#">About</a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="User" 
                        asp-action="Home">Home</a>
                    </li>
                  
                  
                     <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="User"
                         asp-action="practLogin">View Health Profile</a>
                    </li>

                    
                </ul>
            </div>
        </div>
    </nav>



    <div class="containers">
        <div class="form-container">
            <!-- Combined Form -->
            <div class="form" id="combinedForm">
                <header class="heads">Choose User</header>
                <form action="#" id="chooseUserForm">
                    <button class="btn btn-success" onclick="toggleStudentForms()">STUDENT</button>
                    <button class="btn btn-success" onclick="toggleEmployeeForms()">EMPLOYEE</button>
                </form>

            </div>

            <!-- Student Signup Form -->
            <div class="form" id="signinStudentForm" style="display: none;">
                <header>Student</header>
                <form action="#">
                    <input type="text" id="gmail" placeholder="Enter your email">
                    <input type="password" id="pass" placeholder="Enter a password">
                    <a href="" id="ForST" title="Click this if you forgot your password!!!"
                        style="text-decoration:none; margin-right: 100px; margin-top: -10px;">
                        Forgot password??</a>

                    <input type="button" id="SFORM" class="button" value="Login">
                </form>
                <label class="signup-label" id="signup" data-bs-toggle="modal" data-bs-target="#modalStudentCreate"
                    title="Click this to make an account!!!" style="text-decoration:none; margin-top: -20px;">Don't have
                    an account? Signup</label>
                <label class="signup-label" onclick="back()">Back</label>
            </div>

            <!-- Employee Signup Form -->
            <div class="form" id="signinEmployeeForm" style="display: none;">
                <header>Employee</header>
                <form action="#">
                    <input type="text" id="Empgmailadd" placeholder="Enter your email">
                    <input type="password" id="Emppassword" placeholder="Enter a password">
                    <a href="" id="ForEmp" title="Click this if you forgot your password!!!"
                        style="text-decoration:none; margin-right: 100px; margin-top: -10px;">
                        Forgot password??</a>
                    <input type="button" id="EFORM" class="button" value="Login">
                </form>

                <label class="signup-label" id="signup" data-bs-toggle="modal" data-bs-target="#modalEmployeeCreate"
                    title="Click this to make an account!!!">Don't have an account? Signup</label>
                <label class="signup-label" onclick="back()">Back</label>
            </div>
        </div>
    </div>

    @Html.Partial("PartialLogin/signupCreate")
    @Html.Partial("PartialLogin/signupEmployee")

    <script>
        function toggleStudentForms() {
            document.getElementById("combinedForm").style.display = "none";
            document.getElementById("signinStudentForm").style.display = "block";
            document.getElementById("signinEmployeeForm").style.display = "none";
        }

        function toggleEmployeeForms() {
            document.getElementById("combinedForm").style.display = "none";
            document.getElementById("signinStudentForm").style.display = "none";
            document.getElementById("signinEmployeeForm").style.display = "block";
        }


        function back() {
            document.getElementById("combinedForm").style.display = "block";
            document.getElementById("signinStudentForm").style.display = "none";
            document.getElementById("signinEmployeeForm").style.display = "none";
        }

    </script>
</body>

</html>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="~/lib/emailjs/dist/email.min.js"></script>
<script>
    var gmailAdd;
    var StudentList = {};
    var LocalList = {};
    var selectedStudent;

    var EmpgmailAdd;
    var EmployeeList = {};
    var selectedEmployee;

    $(() => {
        getStudent();
        getLocal();
        getEmployee();

        AddSelectDepartment();
        AddSelectDepartmentEmployee();

        AddSelectPrabens();
        SelectEmpProvince();

        address();
        addressEmp();
        margin();

        var userType = sessionStorage.getItem('userType');

        if (userType !== null) {
            if (userType === "patient") {
                window.location.href = "/User/StudentHealthProfile";
            }
            else if (userType === "admin") {
                window.location.href = "/Admin/AdminCategory";
            }
        }


        function margin() {

            $(".page-content").removeClass();
            $(".container-fluid").removeClass();
        }


        function getLocal() {
            $.ajax("../api/adminapi/getStudents")
                .done(function (result) {

                    LocalList = result;
                });

        }

        function getStudent() {
            $.ajax("../api/adminapi/getStudent")
                .done(function (result) {

                    StudentList = result;

                    var gmailaddress = [];
                    result.forEach(item => {
                        gmailaddress.push(item.gmailaddress);
                    });

                    gmailAdd = [... new Set(gmailaddress)];
                });
        }


        function getEmployee() {
            $.ajax("../api/adminapi/getEmployee")
                .done(function (result) {

                    EmployeeList = result;

                    var gmailaddress = [];
                    result.forEach(item => {
                        gmailaddress.push(item.gmailaddress);
                    });

                    EmpgmailAdd = [... new Set(gmailaddress)];
                });
        }




        $("#ForST").click(e => {
            e.preventDefault()

            forgotPasswordstudent();
        })

        $("#ForEmp").click(e => {
            e.preventDefault()

            forgotPasswordEmployee();
        })







        $("#SFORM").click(e => {
            e.preventDefault()


            var gmail = $("#gmail").val();
            var pass = $("#pass").val();



            console.log(gmail + '' + pass)
            if (gmail.trim() === "" || pass.trim() === "") {
                // SweetAlert for validation
                empty();


            } else {

                $.ajax({
                    url: "/api/adminapi/loginuser",
                    method: "POST",
                    data: {
                        "gmail": gmail,
                        "pass": pass
                    },
                    success: res => {

                        console.log("success")
                        //   console.log(StudentList);
                        //  console.log("result",filteredUserData)

                        var filterUserData = (gmail, pass) => LocalList.filter(user => user.gmailaddress == gmail && user.spiCode == pass);

                        var filteredUserData = filterUserData(gmail, pass);
                        localStorage.setItem('userData', JSON.stringify(filteredUserData));

                        sessionStorage.setItem("Logged", true)
                        sessionStorage.setItem('userType', 'patient');

                        location.href = '/User/StudentHealthProfile';


                    },

                    error: err => {
                        error();
                    }
                })

            }

        });



        /////employee
        $("#EFORM").click(e => {
            e.preventDefault()


            var gmail = $("#Empgmailadd").val();
            var pass = $("#Emppassword").val();



            console.log(gmail + '' + pass)
            if (gmail.trim() === "" || pass.trim() === "") {
                // SweetAlert for validation
                empty();


            } else {

                $.ajax({
                    url: "/api/adminapi/loginEmployee",
                    method: "POST",
                    data: {
                        "gmail": gmail,
                        "pass": pass
                    },
                    success: res => {

                        console.log("success")
                        //   console.log(StudentList);
                        //  console.log("result",filteredUserData)

                        var filterUserData = (gmail, pass) => EmployeeList.filter(user => user.gmailaddress == gmail && user.epiCode == pass);

                        var filteredUserData = filterUserData(gmail, pass);

                        sessionStorage.setItem("Logged", true)
                        sessionStorage.setItem('userType', 'patient');
                        localStorage.setItem('userData', JSON.stringify(filteredUserData));

                        location.href = '/User/StudentHealthProfile';


                    },

                    error: err => {
                        error();
                    }
                })

            }

        });






        //////calculate number of years 
        function calculateYearsDifference(userDateInput) {
            var dateRegex = /^\d{4}-\d{2}-\d{2}$/;

            if (dateRegex.test(userDateInput)) {
                var yearsDifference = new Date().getFullYear() - parseInt(userDateInput.slice(0, 4));
                console.log(yearsDifference);
                return yearsDifference;
            } else {
                return "Invalid date format. Please enter a date in the format YYYY-MM-DD.";
            }
        }



        $("#createStudent").click((e) => {

            console.log("yehey na click jyud ko");
            // console.log(equipname);

            var arrData = {}; //ayaw ni tan dug kani dre nga line
            var formelements = $("#createStudentForm .form-group");



            //getting the data from the form
            var formInputs = $("#createStudentForm").serializeArray();
            formInputs.forEach(function (item) {
                arrData[item.name] = item.value;
            });


            //////// function random number
            var random8DigitNumber = Math.floor(Math.random() * 100000000).toString().padStart(8, '0');
            console.log(random8DigitNumber);


            // Example usage:
            var userDateInput = formInputs[3].value; // Replace with the user's input
            var result = calculateYearsDifference(userDateInput);
            console.log("mao nis siya ang result" + result); // This will either print the years difference or an error message




            if (formInputs.length === formelements.length && formInputs[0].value !== '' && formInputs[3].value !== '') {
                // if (formInputs[0].value !== '' && formInputs[1].value !== '' && formInputs[2].value !== '' && formInputs[3].value !== '' && formInputs[4].value !== '' && formInputs[5].value !== '' && formInputs[6].value !== '') {

                if (!gmailAdd.includes(formInputs[4].value)) {




                    /// pagkuha sa data instead value  ang text kuhaon

                    var prabens = $('#prabens option:selected').text();
                    var muni = $('#muni option:selected').text();
                    var barang = $('#barang option:selected').text();


                    arrData.Status = "Pending";
                    $.ajax
                        ({
                            url: "../api/adminapi/AddStudent",
                            type: "POST",
                            data:
                            {
                                addStudent: arrData,
                                randompass: random8DigitNumber,
                                age: result,
                                province: prabens,
                                municipal: muni,
                                baranggay: barang,

                                fullname: ` ${arrData.Firstname}  ${arrData.Middlename}  ${arrData.Lastname}`,


                                address: `Purok ${arrData.AddressPurok}, ${barang}, ${muni}, ${prabens}`



                            },
                        })
                        .done(function () {

                            $("#createStudentForm")[0].reset();
                            $("#modalStudentCreate").modal("toggle");

                            displaySavedProgress();


                            emailjs.init("4Djz2B1HMZ8LQD22Z"); // Account Public Key


                            var params = {
                                sendername: "FRV COLLEGE",
                                to: arrData.Gmailaddress,
                                subject: "C: HEALTH",
                                replyto: arrData.Gmailaddress,
                                message: arrData.SpiCode,
                            };

                            var serviceID = "service_wt1byeb"; // Email Service ID
                            var templateID = "template_w3eqpec"; // Email Template ID

                            emailjs.send(serviceID, templateID, params)
                                .then(res => {
                                    alert("Email sent successfully!!")
                                })
                                .catch(

                            );


                        });



                } else {
                    vol1();
                }


            }
            else {
                alertError();
            }
        });





        $("#createEmployee").click((e) => {

            console.log("yehey na click jyud ko");
            // console.log(equipname);

            var arrData = {}; //ayaw ni tan dug kani dre nga line
            var formelements = $("#createEmployeeForm .form-group");



            //getting the data from the form
            var formInputs = $("#createEmployeeForm").serializeArray();
            formInputs.forEach(function (item) {
                arrData[item.name] = item.value;
            });


            //////// function random number
            var random8DigitNumber = Math.floor(Math.random() * 100000000).toString().padStart(8, '0');
            console.log(random8DigitNumber);


            // Example usage:
            var userDateInput = formInputs[3].value; // Replace with the user's input
            var result = calculateYearsDifference(userDateInput);
            console.log("mao nis siya ang result" + result); // This will either print the years difference or an error message




            if (formInputs.length === formelements.length && formInputs[0].value !== '' && formInputs[3].value !== '') {
                // if (formInputs[0].value !== '' && formInputs[1].value !== '' && formInputs[2].value !== '' && formInputs[3].value !== '' && formInputs[4].value !== '' && formInputs[5].value !== '' && formInputs[6].value !== '') {

                if (!EmpgmailAdd.includes(formInputs[4].value)) {





                    /// pagkuha sa data instead value  ang text kuhaon

                    var prabens = $('#Emprabens option:selected').text();
                    var muni = $('#Empmuni option:selected').text();
                    var barang = $('#Empbarang option:selected').text();


                    arrData.Status = "Pending";

                    $.ajax
                        ({
                            url: "../api/adminapi/AddEmployee",
                            type: "POST",
                            data:
                            {
                                addEmployee: arrData,
                                randompass: random8DigitNumber,
                                age: result,
                                province: prabens,
                                municipal: muni,
                                baranggay: barang,

                                fullname: ` ${arrData.Firstname}  ${arrData.Middlename}  ${arrData.Lastname}`,


                                address: `Purok ${arrData.AddressPurok}, ${barang}, ${muni}, ${prabens}`



                            },
                        })
                        .done(function () {

                            $("#createEmployeeForm")[0].reset();
                            $("#modalEmployeeCreate").modal("toggle");

                            displaySavedProgress();

                            emailjs.init("4Djz2B1HMZ8LQD22Z"); // Account Public Key


                            var params = {
                                sendername: "FRV COLLEGE",
                                to: arrData.Gmailaddress,
                                subject: "C: HEALTH",
                                replyto: arrData.Gmailaddress,
                                message: arrData.EpiCode,
                            };

                            var serviceID = "service_wt1byeb"; // Email Service ID
                            var templateID = "template_w3eqpec"; // Email Template ID

                            emailjs.send(serviceID, templateID, params)
                                .then(res => {
                                    alert("Email sent successfully!!")
                                })
                                .catch(

                            );


                        });



                } else {
                    vol1();
                }


            }
            else {
                alertError();
            }
        });




























        function AddSelectDepartment() {

            $.ajax("../api/adminapi/getDepartment")
                .done(function (result) {

                    var template = document.querySelector("template#departmentOptionTemplate");
                    var parent = document.querySelectorAll("#Department");

                    for (i = 0; i < parent.length; i++) {
                        result.forEach(function (item) {
                            var cloned = template.content.cloneNode(true);
                            cloned.querySelector("option").value = item.departmentId;
                            cloned.querySelector("option").innerText = item.departmentName;

                            parent[i].prepend(cloned);
                        });
                    }





                });
        }


        const depSelect = document.querySelector("#Department");
        const courseSelect = document.querySelector("#Course");



        // Function to populate the result select with data
        function populateResultSelect(selectedValue) {


            $.ajax("../api/adminapi/getCourse")
                .done(function (data) {


                    // Filter the data based on the selected category
                    const datos = data.filter(item => item.departmentId == selectedValue);

                    // Clear the existing options in the result select
                    courseSelect.innerHTML = "";


                    // Populate the result select with the filtered data
                    datos.forEach((item) => {
                        const option = document.createElement("option");
                        option.value = item.courseStrandYearId;
                        option.innerText = item.courseStrandYearName;
                        courseSelect.appendChild(option);

                    });


                });
        }

        // Initial population of the result select based on the default selected value
        populateResultSelect(depSelect.value);


        // Event listener to update the result select when the category select changes
        depSelect.addEventListener("change", function () {
            const selectedValue = this.value;
            populateResultSelect(selectedValue);
        });





        function AddSelectDepartmentEmployee() {

            $.ajax("../api/adminapi/getDepartment")
                .done(function (result) {

                    var templateEmp = document.querySelector("template#EmpdepartmentOptionTemplates");
                    var parentEmp = document.querySelectorAll("#EmpDepartment");

                    for (i = 0; i < parentEmp.length; i++) {
                        result.forEach(function (item) {
                            var clonedEmp = templateEmp.content.cloneNode(true);
                            clonedEmp.querySelector("option").value = item.departmentId;
                            clonedEmp.querySelector("option").innerText = item.departmentName;

                            parentEmp[i].prepend(clonedEmp);
                        });
                    }


                });

        }

        const EmpdepSelect = document.querySelector("#EmpDepartment");
        const EmpcourseSelect = document.querySelector("#EmpCourse");


        function depSelectEmployee(selectedValue) {


            $.ajax("../api/adminapi/getCourse")
                .done(function (data) {


                    // Filter the data based on the selected category
                    const datos = data.filter(item => item.departmentId == selectedValue);

                    // Clear the existing options in the result select
                    EmpcourseSelect.innerHTML = "";

                    datos.forEach((item) => {
                        const option = document.createElement("option");
                        option.value = item.courseStrandYearId;
                        option.innerText = item.courseStrandYearName;
                        EmpcourseSelect.appendChild(option);
                    });

                });
        }

        depSelectEmployee(EmpdepSelect.value);

        // Event listener to update the result select when the category select changes
        EmpdepSelect.addEventListener("change", function () {
            const selectedValue = this.value;
            depSelectEmployee(selectedValue);
        });











        function AddSelectPrabens() {

            fetch("../../js/provinceFinal.js")
                .then(response => response.json())
                .then(result => {



                    var template = document.querySelector("template#prabensOptionTemplate");
                    var parent = document.querySelectorAll("#prabens");



                    for (i = 0; i < parent.length; i++) {
                        result.forEach(function (item) {
                            var cloned = template.content.cloneNode(true);
                            cloned.querySelector("option").value = item.code;
                            cloned.querySelector("option").innerText = item.name;

                            parent[i].prepend(cloned);
                        });
                    }




                });
        }

        function address() {


            const munSelect = document.querySelector("#muni");
            const barSelect = document.querySelector("#barang");


            // Function to populate the result select with data
            function populateResultSelects(selectedValues) {




                fetch("../../js/baranggay.js")
                    .then(response => response.json())
                    .then(data => {




                        // Filter the data based on the selected category
                        const datos = data.filter(item => item.municipalityCode == selectedValues || item.cityCode == selectedValues);

                        // Clear the existing options in the result select
                        barSelect.innerHTML = "";



                        // Populate the result select with the filtered data
                        datos.forEach((item) => {
                            const option = document.createElement("option");
                            option.value = item.code;
                            option.innerText = item.name;
                            barSelect.appendChild(option);

                        });


                    });
            }



            // Initial population of the result select based on the default selected value
            populateResultSelects(munSelect.value);

            // Event listener to update the result select when the category select changes
            munSelect.addEventListener("change", function () {
                const selectedValues = this.value;
                populateResultSelects(selectedValues);
            });




            const depSelect = document.querySelector("#prabens");
            const courseSelect = document.querySelector("#muni");





            fetch("../../js/municipality.js")
                .then(response => response.json())
                .then(data => {


                    // Filter the data based on the selected category
                    const datos = data.filter(item => item.provinceCode == depSelect.value);

                    // Clear the existing options in the result select
                    courseSelect.innerHTML = "";


                    // Populate the result select with the filtered data
                    datos.forEach((item) => {
                        const option = document.createElement("option");
                        option.value = item.code;
                        option.innerText = item.name;
                        courseSelect.appendChild(option);

                    });


                });




        }


        function SelectEmpProvince() {
            fetch("../../js/provinceFinal.js")
                .then(response => response.json())
                .then(result => {

                    var templateEmp = document.querySelector("template#EmprabensOptionTemplates");
                    var parentEmp = document.querySelectorAll("#Emprabens");

                    for (i = 0; i < parentEmp.length; i++) {
                        result.forEach(function (item) {
                            var cloned = templateEmp.content.cloneNode(true);
                            cloned.querySelector("option").value = item.code;
                            cloned.querySelector("option").innerText = item.name;

                            parentEmp[i].prepend(cloned);
                        });
                    }

                })
        }



        function addressEmp() {

            const EmpmunSelect = document.querySelector("#Empmuni");
            const EmpbarSelect = document.querySelector("#Empbarang");

            function selectMunicipal(selectedValues) {

                fetch("../../js/baranggay.js")
                    .then(response => response.json())
                    .then(data => {

                        const datos = data.filter(item => item.municipalityCode == selectedValues || item.cityCode == selectedValues);

                        // Clear the existing options in the result select

                        EmpbarSelect.innerHTML = "";
                        datos.forEach((item) => {
                            const option = document.createElement("option");
                            option.value = item.code;
                            option.innerText = item.name;

                            EmpbarSelect.appendChild(option);
                        });

                    });
            }


            selectMunicipal(EmpmunSelect.value);

            // Event listener to update the result select when the category select changes
            EmpmunSelect.addEventListener("change", function () {
                const selectedValues = this.value;
                selectMunicipal(selectedValues);
            });



            const EmprovinceSelect = document.querySelector("#Emprabens");
            const EmpmuniSelect = document.querySelector("#Empmuni");




            fetch("../../js/municipality.js")
                .then(response => response.json())
                .then(data => {


                    // Filter the data based on the selected category
                    const datos = data.filter(item => item.provinceCode == EmprovinceSelect.value);

                    // Clear the existing options in the result select

                    EmpmuniSelect.innerHTML = "";

                    datos.forEach((item) => {
                        const option = document.createElement("option");
                        option.value = item.code;
                        option.innerText = item.name;

                        EmpmuniSelect.appendChild(option);
                    });


                });







        }






        function forgotPasswordstudent() {
            Swal.fire({
                title: 'Do you want to recover your password?',
                input: 'text',
                inputAttributes: {
                    id: 'gmailPassReCo',
                    class: 'custom-input-class',
                    placeholder: 'Input your Gmail Account'
                },
                showCancelButton: true,
                confirmButtonText: 'Confirm',
            }).then((result) => {
                if (result.isConfirmed) {

                    var gmail = $("#gmailPassReCo").val();

                    if (gmail.trim() !== "") {

                        if (gmailAdd.includes(gmail)) {


                            var filterUserData = StudentList.filter(user => user.gmailaddress == gmail);
                            console.log('filter', filterUserData)

                            filterUserData.forEach(item => {

                                emailjs.init("4Djz2B1HMZ8LQD22Z"); // Account Public Key


                                var params = {
                                    sendername: "FRV COLLEGE",
                                    to: gmail,
                                    subject: "Recovery Password",
                                    replyto: gmail,
                                    message: item.spiCode,
                                };

                                var serviceID = "service_wt1byeb"; // Email Service ID
                                var templateID = "template_w3eqpec"; // Email Template ID

                                emailjs.send(serviceID, templateID, params)
                                    .then(res => {
                                        alert("Email sent successfully!!")
                                    })
                                    .catch(

                                );

                            });

                        } else {
                            errorFor();
                        }

                    } else {
                        empty();
                    }




                }
            });
        }


        function forgotPasswordEmployee() {
            Swal.fire({
                title: 'Do you want to recover your password?',
                input: 'text',
                inputAttributes: {
                    id: 'gmailPassEmp',
                    class: 'custom-input-class',
                    placeholder: 'Input your Gmail Account'
                },
                showCancelButton: true,
                confirmButtonText: 'Confirm',
            }).then((result) => {
                if (result.isConfirmed) {

                    var gmail = $("#gmailPassEmp").val();

                    if (gmail.trim() !== "") {

                        if (EmpgmailAdd.includes(gmail)) {


                            var filterUserData = EmployeeList.filter(user => user.gmailaddress == gmail);
                            console.log('filter', filterUserData)

                            filterUserData.forEach(item => {

                                emailjs.init("4Djz2B1HMZ8LQD22Z"); // Account Public Key


                                var params = {
                                    sendername: "FRV COLLEGE",
                                    to: gmail,
                                    subject: "Recovery Password",
                                    replyto: gmail,
                                    message: item.epiCode,
                                };

                                var serviceID = "service_wt1byeb"; // Email Service ID
                                var templateID = "template_w3eqpec"; // Email Template ID

                                emailjs.send(serviceID, templateID, params)
                                    .then(res => {
                                        alert("Email sent successfully!!")
                                    })
                                    .catch(

                                );

                            });

                        } else {
                            errorFor();
                        }

                    } else {
                        empty();
                    }




                }
            });
        }








        function empty() {
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                text: 'Please fill in all required fields!',
                confirmButtonText: 'OK'

            });
        }



        function error() {
            Swal.fire({
                icon: 'error',
                title: 'Account not found',
                text: 'Username or password is invalid!',
                confirmButtonText: 'OK'
            });
        }

        function errorFor() {
            Swal.fire({
                icon: 'error',
                title: 'Account not found',
                text: 'Gmail inputted is invalid!',
                confirmButtonText: 'OK'
            });
        }


        function vol1() {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Inputted Email is already Existed!!',
            })
        }
        function alertError() {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Input the necessary elements!',
            })
        }

        function displaySavedProgress() {
            Swal.fire({
                icon: 'success',
                title: 'Your work has been saved',
                showConfirmButton: false,
                timer: 1500
            })

        }




    });

</script>
